// schema.prisma
generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                    String        @id @default(cuid())
  name                  String?
  email                 String        @unique
  gamertag              String
  role                  Role          @default(USER)
  emailVerified         Boolean?
  image                 String?
  accounts              Account[]
  sessions              Session[]
  isVerified            Boolean?
  lightningAddress      String?
  publicBio             String?
  publicStaticCharge    String?
  social                Json?
  balance               String?
  remainingAmountLimits Json?
  skill                 String?
  location              String?
  availability          Boolean?

  @@unique([id, gamertag, email, image])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  USER
  ADMIN
}

// Application Models
